Kaeon ACE
	
	Philosophy
		
		-
			Kaeon ACE is a set of object types for the ACE dialect that serve to define a component
			entity tree and directives to a host environment.
		-
	
	Principles
		
		Structure
			
			-
				Kaeon ACE specifies three object types: entity, component, and directive. All three
				will have the type element present.
				
				An entity object element's type element's child's content will be "Entity", and it
				have both entity object elements and component object elements as children of the
				children element if the children element is present.
				
				A component element's type element's child's content will be "Component" and its
				children element will have a single child that acts as the component.
				
				A directive element's type element's child's content will be "Directive". The
				children of the children and data elements, if they are present, are undefined.
				
				Each child of the data element, if it is present, of any object element will have
				content that specifies the alias of a field, and will have children that dictate
				the content of said field.
				
				Kaeon ACE also supports the use directive by default. A use directive is a
				directive object with a field that has the alias "Use" nested in its data element.
				The use element may have an indefinite number of children, each of which will have
				content that specifies a module containing functionality to be integrated into the
				host environment.
				
				The letter casing of the content of the aforementioned elements is irrelevant.
			-